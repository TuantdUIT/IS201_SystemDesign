/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hotelmanagement.dashboard_main;

import hotelmanagement.entity.Current_User;
import hotelmanagement.entity.dba_connection;
import hotelmanagement.dashboard_main.DashboardClient;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author ADMIN
 */
public class ExtendRoom extends javax.swing.JFrame {
    private String MaDVP;
    private LocalDate NgayBD;
    /**
     * Creates new form ExtendRoom
     */
    public ExtendRoom() {
        initComponents();
    }
    
    public ExtendRoom(String madvp, String ngaybd){
        initComponents();
        this.MaDVP = madvp;
        ngaybd = ngaybd.substring(0,10);
        LocalDate date = LocalDate.parse(ngaybd);
        this.NgayBD = date;//.plusDays(1);
        
        RoomID.setText(this.MaDVP);
        lblEndDate.setText(ngaybd);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlExtendR = new javax.swing.JPanel();
        btnAcp = new javax.swing.JButton();
        lblDate = new javax.swing.JLabel();
        lblRoomID = new javax.swing.JLabel();
        RoomID = new javax.swing.JLabel();
        datePicker1 = new com.github.lgooddatepicker.components.DatePicker();
        lblRoomID1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblEndDate = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnAcp.setBackground(new java.awt.Color(46, 121, 130));
        btnAcp.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnAcp.setForeground(new java.awt.Color(255, 255, 255));
        btnAcp.setText("Extend");
        btnAcp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcpActionPerformed(evt);
            }
        });

        lblDate.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblDate.setText("Select the date you'd like to extend the room to:");

        lblRoomID.setBackground(new java.awt.Color(46, 121, 130));
        lblRoomID.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lblRoomID.setForeground(new java.awt.Color(255, 255, 255));
        lblRoomID.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRoomID.setText("EXTEND ROOM");
        lblRoomID.setOpaque(true);

        RoomID.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        RoomID.setForeground(new java.awt.Color(255, 0, 0));
        RoomID.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        lblRoomID1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblRoomID1.setText("You're extending: ");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel1.setText("will end on:");

        lblEndDate.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblEndDate.setForeground(new java.awt.Color(255, 0, 0));
        lblEndDate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout pnlExtendRLayout = new javax.swing.GroupLayout(pnlExtendR);
        pnlExtendR.setLayout(pnlExtendRLayout);
        pnlExtendRLayout.setHorizontalGroup(
            pnlExtendRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlExtendRLayout.createSequentialGroup()
                .addContainerGap(137, Short.MAX_VALUE)
                .addComponent(btnAcp, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(137, Short.MAX_VALUE))
            .addGroup(pnlExtendRLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(datePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(lblRoomID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlExtendRLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(pnlExtendRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblRoomID1)
                    .addGroup(pnlExtendRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(lblDate)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlExtendRLayout.createSequentialGroup()
                            .addComponent(RoomID, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(lblEndDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlExtendRLayout.setVerticalGroup(
            pnlExtendRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlExtendRLayout.createSequentialGroup()
                .addComponent(lblRoomID, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblRoomID1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlExtendRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlExtendRLayout.createSequentialGroup()
                        .addGroup(pnlExtendRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(RoomID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblEndDate, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                        .addGap(4, 4, 4))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlExtendRLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(lblDate)
                .addGap(18, 18, 18)
                .addComponent(datePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(btnAcp, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlExtendR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlExtendR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public boolean isRoomAvailable(Connection conn, String maPhong, LocalDate ngayCheckin, LocalDate ngayCheckout) throws SQLException {
    String sql = "SELECT 1 FROM HOADON WHERE MADVP = ? AND ((? >= NGAYBD AND ? <= NGAYKT) OR (? >= NGAYBD AND ? <= NGAYKT))";
    
    try (PreparedStatement pstmt = conn.prepareStatement(sql)) {
        pstmt.setString(1, maPhong);
        pstmt.setDate(2, java.sql.Date.valueOf(ngayCheckout));
        pstmt.setDate(3, java.sql.Date.valueOf(ngayCheckout));
        pstmt.setDate(4, java.sql.Date.valueOf(ngayCheckin));
        pstmt.setDate(5, java.sql.Date.valueOf(ngayCheckin));
        
        try (ResultSet rs = pstmt.executeQuery()) {
            return !rs.next(); 
        }
    }
    }
    private void btnAcpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcpActionPerformed
        // TODO add your handling code here:
        if(datePicker1.getDate() == null)
        {
            JOptionPane.showMessageDialog(this, "Please choose the new checkout date!");
            datePicker1.requestFocus();;
        }
        else
        if(this.NgayBD.compareTo(datePicker1.getDate())>=0) {
            JOptionPane.showMessageDialog(this, "The new checkout date must after the old checkout date!");
        }
        else
        {
        dba_connection connect = new dba_connection();
        try {
            Connection con = DriverManager.getConnection(connect.url, connect.username, connect.password);
            if(isRoomAvailable(con,this.MaDVP,this.NgayBD,datePicker1.getDate()))
            {
                JOptionPane.showMessageDialog(null, "Sorry, this room is already booked during your selected dates. Please try another date range!");
            }
            else{
                String sql = "INSERT INTO HOADON (MAKH, MADVP, MADVTI, MAFB, NGUOIXACNHAN, NGAYBD, NGAYKT, NGAYTHANHTOAN, TINHTRANGTT) "
                        + "VALUES ('" + Current_User.MaKH + "', trim(?), NULL, NULL, NULL, ?, ?, NULL, 'Chưa thanh toán')";
            
                PreparedStatement pst = con.prepareStatement(sql);

                pst.setString(1, this.MaDVP);

                Date ngayBDsql = Date.valueOf(this.NgayBD);
                pst.setDate(2, ngayBDsql);

                LocalDate ngayKT = datePicker1.getDate();
                Date ngayKTsql = Date.valueOf(ngayKT);
                pst.setDate(3, ngayKTsql);

                pst.executeUpdate();

                JOptionPane.showMessageDialog(null, "Extend successfully!");
                this.dispose();
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(ExtendRoom.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_btnAcpActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExtendRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExtendRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExtendRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExtendRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExtendRoom().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel RoomID;
    private javax.swing.JButton btnAcp;
    private com.github.lgooddatepicker.components.DatePicker datePicker1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblEndDate;
    private javax.swing.JLabel lblRoomID;
    private javax.swing.JLabel lblRoomID1;
    private javax.swing.JPanel pnlExtendR;
    // End of variables declaration//GEN-END:variables

}
